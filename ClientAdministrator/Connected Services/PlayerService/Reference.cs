//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientAdministrator.PlayerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlayerService.IRemoteAdmin")]
    public interface IRemoteAdmin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/GetLog", ReplyAction="http://tempuri.org/IRemoteAdmin/GetLogResponse")]
        string[] GetLog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/GetLog", ReplyAction="http://tempuri.org/IRemoteAdmin/GetLogResponse")]
        System.Threading.Tasks.Task<string[]> GetLogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/GetRanking", ReplyAction="http://tempuri.org/IRemoteAdmin/GetRankingResponse")]
        string[] GetRanking();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/GetRanking", ReplyAction="http://tempuri.org/IRemoteAdmin/GetRankingResponse")]
        System.Threading.Tasks.Task<string[]> GetRankingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/GetStatistics", ReplyAction="http://tempuri.org/IRemoteAdmin/GetStatisticsResponse")]
        string[] GetStatistics();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/GetStatistics", ReplyAction="http://tempuri.org/IRemoteAdmin/GetStatisticsResponse")]
        System.Threading.Tasks.Task<string[]> GetStatisticsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/AddPlayer", ReplyAction="http://tempuri.org/IRemoteAdmin/AddPlayerResponse")]
        string AddPlayer(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/AddPlayer", ReplyAction="http://tempuri.org/IRemoteAdmin/AddPlayerResponse")]
        System.Threading.Tasks.Task<string> AddPlayerAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/ModifyPlayer", ReplyAction="http://tempuri.org/IRemoteAdmin/ModifyPlayerResponse")]
        string ModifyPlayer(string oldUsername, string newUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/ModifyPlayer", ReplyAction="http://tempuri.org/IRemoteAdmin/ModifyPlayerResponse")]
        System.Threading.Tasks.Task<string> ModifyPlayerAsync(string oldUsername, string newUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/DeletePlayer", ReplyAction="http://tempuri.org/IRemoteAdmin/DeletePlayerResponse")]
        string DeletePlayer(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemoteAdmin/DeletePlayer", ReplyAction="http://tempuri.org/IRemoteAdmin/DeletePlayerResponse")]
        System.Threading.Tasks.Task<string> DeletePlayerAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRemoteAdminChannel : ClientAdministrator.PlayerService.IRemoteAdmin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoteAdminClient : System.ServiceModel.ClientBase<ClientAdministrator.PlayerService.IRemoteAdmin>, ClientAdministrator.PlayerService.IRemoteAdmin {
        
        public RemoteAdminClient() {
        }
        
        public RemoteAdminClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RemoteAdminClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteAdminClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteAdminClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetLog() {
            return base.Channel.GetLog();
        }
        
        public System.Threading.Tasks.Task<string[]> GetLogAsync() {
            return base.Channel.GetLogAsync();
        }
        
        public string[] GetRanking() {
            return base.Channel.GetRanking();
        }
        
        public System.Threading.Tasks.Task<string[]> GetRankingAsync() {
            return base.Channel.GetRankingAsync();
        }
        
        public string[] GetStatistics() {
            return base.Channel.GetStatistics();
        }
        
        public System.Threading.Tasks.Task<string[]> GetStatisticsAsync() {
            return base.Channel.GetStatisticsAsync();
        }
        
        public string AddPlayer(string username) {
            return base.Channel.AddPlayer(username);
        }
        
        public System.Threading.Tasks.Task<string> AddPlayerAsync(string username) {
            return base.Channel.AddPlayerAsync(username);
        }
        
        public string ModifyPlayer(string oldUsername, string newUsername) {
            return base.Channel.ModifyPlayer(oldUsername, newUsername);
        }
        
        public System.Threading.Tasks.Task<string> ModifyPlayerAsync(string oldUsername, string newUsername) {
            return base.Channel.ModifyPlayerAsync(oldUsername, newUsername);
        }
        
        public string DeletePlayer(string username) {
            return base.Channel.DeletePlayer(username);
        }
        
        public System.Threading.Tasks.Task<string> DeletePlayerAsync(string username) {
            return base.Channel.DeletePlayerAsync(username);
        }
    }
}
